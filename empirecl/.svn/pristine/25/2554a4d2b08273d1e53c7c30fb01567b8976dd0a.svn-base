package com.netsol.controllers.utility;

import java.io.IOException;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.security.core.AuthenticationException;
import org.springframework.security.web.DefaultRedirectStrategy;
import org.springframework.security.web.RedirectStrategy;
import org.springframework.security.web.authentication.AuthenticationFailureHandler;


public class CustomAuthenticationFailureHandler implements AuthenticationFailureHandler    {
	 private RedirectStrategy redirectStrategy = new DefaultRedirectStrategy();
     public String userLoginFail;
     public String adminLoginFail;

     
	
	public void setUserLoginFail(String userLoginFail) {
		this.userLoginFail = userLoginFail;
	}

	public void setAdminLoginFail(String adminLoginFail) {
		this.adminLoginFail = adminLoginFail;
	}

	public void onAuthenticationFailure(HttpServletRequest request,
			HttpServletResponse response, AuthenticationException exception)
			throws IOException, ServletException {
	//	String referer=request.getHeader("Referer");
		String loginUrl ="";	
 		if(request.getParameter("utype").equals("user")){
 			loginUrl =this.userLoginFail;
 		}else{
 			loginUrl =this.adminLoginFail;
 		}
		loginUrl=loginUrl+"?error=error";
		redirectStrategy.sendRedirect( request, response, loginUrl );
		
	}
 

}
