/**
 * 
 */
package com.netsol.controllers.utility;

import java.util.ResourceBundle;

import javax.servlet.http.HttpServletRequest;

import com.netsol.utility.CommonUtils;

/**
 * @author harmeet.singh
 *
 */
public class CommonWebUtils {

	public static String getDocumentsRootPath() {
		String actualPath = "com.poldating.util.CommonUtils".getClass()
				.getProtectionDomain().getCodeSource().getLocation().toString();
		String basepathname = ResourceBundle.getBundle("properties/settings")
				.getString("base.dir.to.uploadfile");
		String realPath = actualPath
				.substring(0, actualPath.indexOf("webapps"));
		if (realPath.contains("file:/")) {
			if (CommonUtils.isWindowOS()) {
				realPath = realPath.substring(6) + "webapps\\" + basepathname
						+ "\\"; // for window

			} else if (CommonUtils.isLinuxOS()) {
				realPath = realPath.substring(5) + "webapps/" + basepathname
						+ "/"; // for Linux
			}
		}

		return realPath;

	}

	public static String getTempDocumentsRootPath() {
		String actualPath = new CommonUtils().getClass().getProtectionDomain()
				.getCodeSource().getLocation().toString();
		String basepathname = ResourceBundle.getBundle("properties/settings")
				.getString("base.dir.to.uploadfile");
		String realPath = actualPath
				.substring(0, actualPath.indexOf("webapps"));
		if (realPath.contains("file:/")) {
			if (CommonUtils.isWindowOS()) {
				realPath = realPath.substring(6) + "webapps\\" + basepathname
						+ "\\tmp" + "\\"; // for window

			} else if (CommonUtils.isLinuxOS()) {
				realPath = realPath.substring(5) + "webapps/" + basepathname
						+ "/tmp/"; // for Linux
			}
		}
		return realPath;

	}

	public static String getIconsRootPath() {
		String actualPath = new CommonUtils().getClass().getProtectionDomain()
				.getCodeSource().getLocation().toString();
		String basepathname = ResourceBundle.getBundle("properties/settings")
				.getString("base.dir.to.uploadfile");
		String realPath = actualPath
				.substring(0, actualPath.indexOf("webapps"));
		if (realPath.contains("file:/")) {
			if (CommonUtils.isWindowOS()) {
				realPath = realPath.substring(6) + "webapps\\" + basepathname
						+ "\\icons" + "\\"; // for window

			} else if (CommonUtils.isLinuxOS()) {
				realPath = realPath.substring(5) + "webapps/" + basepathname
						+ "/icons/"; // for Linux
			}
		}
		return realPath;

	}

	public static String getPathToWebapps() {

		String actualPath = new CommonUtils().getClass().getProtectionDomain()
				.getCodeSource().getLocation().toString();
		String realPath = actualPath
				.substring(0, actualPath.indexOf("webapps"));
		if (realPath.contains("file:/")) {
			if (CommonUtils.isWindowOS()) {
				realPath = realPath.substring(6) + "webapps\\";

			} else if (CommonUtils.isLinuxOS()) {
				realPath = realPath.substring(5) + "webapps/";
			}
		}

		return realPath;

	}

	public static String getWebPath(HttpServletRequest request, String path) {
		String webtaph = "";
		if (path.contains("webapps")) {
			webtaph = path.substring(path.indexOf("webapps")
					+ "webapps".length());

		}
		if (CommonUtils.isWindowOS()) {
			webtaph = webtaph.replace("\\", "/");
		}

		return webtaph;

	}

	public static String getBasePath(HttpServletRequest request) {

		String path = request.getContextPath();
		String basePath = "";
		if (request.getServerName().contains("www"))
			basePath = request.getScheme() + "://" + request.getServerName()
					+ "/";
		else {
			basePath = request.getScheme() + "://" + request.getServerName()
					+ ":" + request.getServerPort() + path + "/";
		}
		return basePath;
	}

	public static String getRootPath(HttpServletRequest request) {

		String basePath = "";
		if (request.getServerName().contains("www"))
			basePath = request.getScheme() + "://" + request.getServerName()
					+ "/";
		else {
			basePath = request.getScheme() + "://" + request.getServerName()
					+ ":" + request.getServerPort() + "";
		}
		return basePath;
	}
}
